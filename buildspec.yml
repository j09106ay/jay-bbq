version: 0.2

env:
  secrets-manager:
    SECRET_MANAGER_DETAILS: /secret/application
phases:
  pre_build:
    commands:
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - echo $SECRET_MANAGER_DETAILS
      - DB_CRED=$(aws secretsmanager get-secret-value --secret-id /secret/application --query SecretString --output text | sed -n 's/.*"AWS_ACCOUNT_ID":"\([^"]*\)".*/\1/p')
      - echo $DB_CRED
      - echo $SECRET_MANAGER_DETAILS | sed -n 's/.*"AWS_ACCOUNT_ID":"\([^"]*\)".*/\1/p'
      - echo $Test
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DB_CRED.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=857810270983.dkr.ecr.ap-southeast-1.amazonaws.com/jay-aws-registry
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=jay-bbq-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"jay-bbq","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
   - imagedefinitions.json
   - target/jay-bbq.jar
